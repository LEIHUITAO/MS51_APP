C51 COMPILER V9.00   SYS_UART0_IRQ                                                         11/04/2020 15:29:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYS_UART0_IRQ
OBJECT MODULE PLACED IN .\Output\Sys_Uart0_IRQ.obj
COMPILER INVOKED BY: C:\Keil_MDK\C51\BIN\C51.EXE ..\Main\Sys_Uart0_IRQ.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Library;..\M
                    -ain;..\Library\Device\Include;..\Main\0AC) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Sys_Uart0_IRQ.lst) TABS(2)
                    - OBJECT(.\Output\Sys_Uart0_IRQ.obj)

line level    source

   1          #include "includes.h"
   2          
   3          extern void app_bt_process(u8 ucData);
   4          
   5          #define   DEF_Uart0_BPS       115200      //定义波特率
   6          
   7          #define   c_ubTX_Uart0_Buff     16        //发送字节长度
   8          
   9          static volatile bit fTX_Busy;                               //TX 忙标志
  10          static volatile u8 ubTX_Uart_Save;              //保存"ubUart_TX_Buff[]"指针
  11          static volatile u8 ubTX_Uart_Read;              //读取"ubUart_TX_Buff[]"指针  
  12          static u8 ubTX_Uart_Buff[c_ubTX_Uart0_Buff];        //缓存 Uart TX 数据
  13          
  14          //************************************************************************
  15          // *功    能：串口中断服务函数
  16          // *入    口：
  17          // *出    口：
  18          // *备    注：
  19          // *函数性质：
  20          //************************************************************************
  21          void Uart0_IRQHandler(void)  interrupt 4
  22          {
  23   1          _push_(SFRS);
  24   1          
  25   1          //RX
  26   1        if(RI)
  27   1          {
  28   2              clr_RI;
  29   2              app_bt_process(SBUF);
  30   2          }
  31   1          
  32   1          //TX
  33   1        if(TI)
  34   1          {
  35   2              clr_TI;
  36   2              
  37   2              if(ubTX_Uart_Read != ubTX_Uart_Save)
  38   2              {
  39   3                  SBUF = ubTX_Uart_Buff[ubTX_Uart_Read];
  40   3                  fTX_Busy = 1;
  41   3      
  42   3                  //读取指针加+
  43   3                  ubTX_Uart_Read ++;
  44   3                  if(ubTX_Uart_Read >= c_ubTX_Uart0_Buff)
  45   3                  {
  46   4                      ubTX_Uart_Read = 0;
  47   4                  }
  48   3              }
  49   2              else
  50   2              {
  51   3                  fTX_Busy = 0;
  52   3              }
  53   2          }
C51 COMPILER V9.00   SYS_UART0_IRQ                                                         11/04/2020 15:29:22 PAGE 2   

  54   1      
  55   1          _pop_(SFRS);
  56   1      }
  57          
  58          //************************************************************************
  59          // *功    能：串口初始化
  60          // *入    口：
  61          // *出    口：
  62          // *备    注：
  63          // *函数性质：
  64          //************************************************************************
  65          void Uart0_Init(void)
  66          {
  67   1        
  68   1      #if 1
  69   1      
  70   1        P06_QUASI_MODE;     //Setting UART pin as Quasi mode for T
  71   1        //P07_QUASI_MODE;     //Setting UART pin as Quasi mode for R
  72   1        
  73   1          SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  74   1          TMOD |= 0x20;     //Timer1 Mode2
  75   1          
  76   1          set_SMOD;         //UART0 Double Rate Enable
  77   1          set_T1M;
  78   1          clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  79   1       
  80   1          //TH1 = 256 - (1000000/DEF_Uart0_BPS+1);               //16 MHz
  81   1          TH1 = 256 - (1037500/DEF_Uart0_BPS);               //16.6 MHz
  82   1          
  83   1          set_TR1;
  84   1        
  85   1      #else
              
                  P06_Quasi_Mode;     //Setting UART pin as Quasi mode for T
                //P07_Quasi_Mode;     //Setting UART pin as Quasi mode for R
                  
                  SCON = 0x50;        //UART0 Mode1,REN=1,TI=1
                  set_SMOD;           //UART0 Double Rate Enable
                  T3CON &= 0xF8;      //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
                  set_BRCK;           //UART0 baud rate clock source = Timer3
              
                  //RH3 = (65536 - (1000000/DEF_Uart0_BPS)-1) >> 8;     //16 MHz
                  //RL3 = (65536 - (1000000/DEF_Uart0_BPS)-1) & 0xff;   
                  
                  RH3    = (65536 - (1037500/DEF_Uart0_BPS)) >> 8;      //16.6 MHz
                  RL3    = (65536 - (1037500/DEF_Uart0_BPS)) & 0xff;    
                  
                  set_TR3;            //Trigger Timer3
              
              #endif
 104   1      
 105   1      #ifdef c_ubUart0_RX_Long
                  P07_Quasi_Mode;     //Setting UART pin as Quasi mode for R
                  
                set_REN;            //接收使能
                  UART_RX.ubLong = 0;
                  
                  set_PSH;
                  set_PS;             //中断优化级最高3、最低0。 set_PSH:set_PS = 3
              #else
 114   1          clr_PSH;
 115   1          clr_PS;             //中断优化级最高3、最低0。 clr_PSH:clr_PS = 0
C51 COMPILER V9.00   SYS_UART0_IRQ                                                         11/04/2020 15:29:22 PAGE 3   

 116   1      #endif
 117   1          clr_TI;
 118   1      
 119   1          set_ES;             //中断使能
 120   1          
 121   1        //初始化变量
 122   1        fTX_Busy = 0;
 123   1        ubTX_Uart_Save = 0;
 124   1        ubTX_Uart_Read = 0;
 125   1      }
 126          
 127          
 128          //************************************************************************
 129          // *功    能：发送一个字节
 130          // *入    口：
 131          // *出    口：
 132          // *备    注：
 133          // *函数性质：
 134          //************************************************************************
 135          void Uart0_Send_Byte(u8 ch)
 136          {
 137   1          TI = 0;
 138   1          SBUF = ch;
 139   1          while(TI==0);
 140   1      }
 141          
 142          /******************************************************************************
 143           * 函 数 名  : Uart_Send_Byte_Push
 144           * 函数描述  : UART 接收到1个字节 丢入 缓存，判断是否满64
 145           * 输入参数  : 无
 146           * 输出参数  : 无
 147           * 返 回 值  : 无
 148           
 149           * 备    注  : 
 150           * 创 建 人  : 陈小冰
 151           * 创建日期  : 2017-7-31
 152           
 153          ******************************************************************************/
 154          u8 Uart0_Send_Byte_Push(u8 ubData)
 155          {
 156   1        u8 ubTmp;
 157   1      
 158   1        //判断缓存是否足够
 159   1        if(ubTX_Uart_Save > ubTX_Uart_Read)
 160   1        {
 161   2          ubTmp = ubTX_Uart_Save - ubTX_Uart_Read;
 162   2        }
 163   1        else if(ubTX_Uart_Save < ubTX_Uart_Read)
 164   1        {
 165   2          ubTmp = c_ubTX_Uart0_Buff - ubTX_Uart_Read;
 166   2          ubTmp += ubTX_Uart_Save;
 167   2        }
 168   1          if(ubTmp == (c_ubTX_Uart0_Buff-1))
 169   1          {
 170   2              //缓存满
 171   2              return 1;
 172   2          }
 173   1          
 174   1      
 175   1        //
 176   1        ubTX_Uart_Buff[ubTX_Uart_Save] = ubData;
 177   1      
C51 COMPILER V9.00   SYS_UART0_IRQ                                                         11/04/2020 15:29:22 PAGE 4   

 178   1        //指向下一缓存
 179   1        ubTX_Uart_Save ++;
 180   1        if(ubTX_Uart_Save >= c_ubTX_Uart0_Buff)
 181   1        {
 182   2          ubTX_Uart_Save = 0;
 183   2        }
 184   1      
 185   1        //
 186   1        if(fTX_Busy == 0)
 187   1        {
 188   2          TI = 1;     //使能发送
 189   2        }
 190   1          
 191   1          return 0;
 192   1      }
 193          
 194          //=============================================================================
 195          //printf函数重定向 
 196          //=============================================================================
 197          char putchar(char c)
 198          {
 199   1          #if 0
                      Uart0_Send_Byte(c);
                  #else
 202   1              while(Uart0_Send_Byte_Push(c));
 203   1          #endif
 204   1          
 205   1          return c;
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
