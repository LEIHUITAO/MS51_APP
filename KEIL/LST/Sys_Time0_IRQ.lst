C51 COMPILER V9.60.0.0   SYS_TIME0_IRQ                                                     03/08/2021 17:08:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYS_TIME0_IRQ
OBJECT MODULE PLACED IN .\Output\Sys_Time0_IRQ.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Main\Sys_Time0_IRQ.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Library;..\Ma
                    -in;..\Library\Device\Include;..\Main\0AC;..\Main) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Sys_Time0_IRQ.lst) 
                    -TABS(2) OBJECT(.\Output\Sys_Time0_IRQ.obj)

line level    source

   1          #include "includes.h"
   2          #include "Sys_Time0_IRQ.h"
   3          #include "Sys_Init.h"
   4          
   5          #define   c_uwTime_Init_Cnt   (65536-(16*DEF_TIME0_CNT_US)) //Clk (US)
   6          
   7          volatile bool fMain_INT;
   8          static volatile u16 uwTick_Cnt;           //中断计数
   9          static volatile bit fTick_Busy;           //
  10          
  11          //检测参数
  12          static_assert(c_uwTime_Init_Cnt<=0xFFFF);   
  13          
  14          //************************************************************************
  15          // *功    能：定时初始化
  16          // *入    口：
  17          // *出    口：
  18          // *备    注：
  19          // *函数性质：
  20          //************************************************************************
  21          void Time0_Init(void)
  22          { 
  23   1        TIMER0_MODE1_ENABLE;
  24   1          
  25   1          TH0 = c_uwTime_Init_Cnt >> 8;
  26   1          TL0 = c_uwTime_Init_Cnt & 0xff;
  27   1          
  28   1          set_T0M;                                    //定时器0的时钟选择为系统时钟
  29   1          set_ET0;                                    //enable Timer0 interrupt
  30   1          
  31   1          clr_PT0H;
  32   1          set_PT0;                                    //中断优化级最高3、最低0。 clr_PT0H:set_PT0 = 1
  33   1          
  34   1          set_TR0;                                    //Timer0 run
  35   1      }
  36          
  37          u8 Time0_DLY(u16 * puwReg,u16 uwTime)
  38          {
  39   1          volatile u16 uwTick;
  40   1          u16 uwTmp;
  41   1          
  42   1          if(uwTick_Cnt == *puwReg)
  43   1          {
  44   2              return 0;
  45   2          }
  46   1          
  47   1          fTick_Busy = 1;
  48   1          uwTick = uwTick_Cnt;
  49   1          fTick_Busy = 0;
  50   1          
  51   1          if(*puwReg > uwTick)
  52   1          {
  53   2              uwTmp = (0xffff - *puwReg) + uwTick;
C51 COMPILER V9.60.0.0   SYS_TIME0_IRQ                                                     03/08/2021 17:08:25 PAGE 2   

  54   2          }
  55   1          else
  56   1          {
  57   2              uwTmp = uwTick - *puwReg;
  58   2          }
  59   1          
  60   1          //
  61   1          if(uwTmp >= uwTime)
  62   1          {
  63   2              *puwReg = uwTick;
  64   2              return 1;
  65   2          }
  66   1          
  67   1          return 0;
  68   1      }
  69          
  70          void TMR0_IRQHandler(void) interrupt 1 
  71          {
  72   1          static u8 ubBusy_Cnt = 0;
  73   1          
  74   1          TL0 += c_uwTime_Init_Cnt & 0xff;
  75   1          TH0 += c_uwTime_Init_Cnt >> 8;
  76   1          clr_TF0;
  77   1          
  78   1          //=====================================================
  79   1        //主频 tick
  80   1          fMain_INT = 1;
  81   1          if(fTick_Busy)
  82   1          {
  83   2               ubBusy_Cnt ++; 
  84   2          }
  85   1          else
  86   1          {
  87   2              uwTick_Cnt ++;
  88   2              if(0 != ubBusy_Cnt)
  89   2              {
  90   3                  uwTick_Cnt += ubBusy_Cnt;
  91   3                  ubBusy_Cnt = 0;
  92   3              }
  93   2          }
  94   1          
  95   1          //=====================================================
  96   1      
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    173    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
